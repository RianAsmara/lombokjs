{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/asmaraputra/Projects/lombokjs/pages/blog/index.js\";\nimport Link from 'next/link';\nimport dayjs from 'dayjs';\nexport var __N_SSG = true;\nexport default function Blog(_ref) {\n  var _this = this;\n\n  var posts = _ref.posts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-16 w-6/12 divide-y-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-bold text-4xl mb-3\",\n      children: \"Articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pt-5\",\n      children: posts.map(function (post) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            href: \"/blog/\".concat(post.slug),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"font-semibold text-2xl hover:text-red-500\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400\",\n            children: dayjs(post.date).format('MMMM D, YYYY')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, _this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n} // this function will get called at build time\n\n_c = Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/home/asmaraputra/Projects/lombokjs/pages/blog/index.js"],"names":["Link","dayjs","Blog","posts","map","post","slug","title","date","format","id"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,IAAT,OAAyB;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AACtC,sBACE;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBACGA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,4BACb;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,kBAAWA,IAAI,CAACC,IAAhB,CAAV;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC,2CAAb;AAAA,wBAA0DD,IAAI,CAACE;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE;AAAG,YAAA,SAAS,EAAC,uBAAb;AAAA,sBAAsCN,KAAK,CAACI,IAAI,CAACG,IAAN,CAAL,CAAiBC,MAAjB,CAAwB,cAAxB;AAAtC;AAAA;AAAA;AAAA;AAAA,mBAJF;AAAA,WAA0BJ,IAAI,CAACK,EAA/B;AAAA;AAAA;AAAA;AAAA,iBADa;AAAA,OAAd;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,C,CAED;;KAlBwBR,I","sourcesContent":["import Link from 'next/link'\nimport dayjs from 'dayjs'\n\nexport default function Blog({ posts }) {\n  return (\n    <div className=\"container mx-auto mt-16 w-6/12 divide-y-2\">\n      <h1 className=\"font-bold text-4xl mb-3\">Articles</h1>\n      <ul className=\"pt-5\">\n        {posts.map(post => (\n          <li className=\"mb-3\" key={post.id}>\n            <Link href={`/blog/${post.slug}`}>\n              <a className=\"font-semibold text-2xl hover:text-red-500\">{post.title}</a>\n            </Link>\n            <p className=\"text-sm text-gray-400\">{dayjs(post.date).format('MMMM D, YYYY')}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\n// this function will get called at build time\nexport async function getStaticProps() {\n  const fs = require('fs')\n  const matter = require('gray-matter')\n  const uniqid = require('uniqid')\n\n  const postsDir = `${process.cwd()}/posts`\n\n  const files = fs.readdirSync(postsDir, 'utf-8')\n  const posts = files\n    .filter(file => file.endsWith('.md'))\n    .map(file => {\n      const rawContent = fs.readFileSync(`${postsDir}/${file}`, { encoding: 'utf8' })\n      const { data } = matter(rawContent)\n\n      return { ...data, id: uniqid()}\n    })\n    .sort((a, b) => new Date(b.date) - new Date(a.date))\n\n  return {\n    props: { posts }\n  }\n}"]},"metadata":{},"sourceType":"module"}