{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/asmaraputra/Projects/lombokjs/pages/blog/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport dayjs from 'dayjs';\nexport default function Blog({\n  posts\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-16 w-6/12 divide-y-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-bold text-4xl mb-3\",\n      children: \"Articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pt-5\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: `/blog/${post.slug}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"font-semibold text-2xl hover:text-red-500\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-400\",\n          children: dayjs(post.date).format('MMMM D, YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n} // this function will get called at build time\n\nexport async function getStaticProps() {\n  const fs = require('fs');\n\n  const matter = require('gray-matter');\n\n  const uniqid = require('uniqid');\n\n  const postsDir = `${process.cwd()}/posts`;\n  const files = fs.readdirSync(postsDir, 'utf-8');\n  const posts = files.filter(file => file.endsWith('.md')).map(file => {\n    const rawContent = fs.readFileSync(`${postsDir}/${file}`, {\n      encoding: 'utf8'\n    });\n    const {\n      data\n    } = matter(rawContent);\n    return _objectSpread(_objectSpread({}, data), {}, {\n      id: uniqid()\n    });\n  }).sort((a, b) => new Date(b.date) - new Date(a.date));\n  return {\n    props: {\n      posts\n    }\n  };\n}","map":{"version":3,"sources":["/home/asmaraputra/Projects/lombokjs/pages/blog/index.js"],"names":["Link","dayjs","Blog","posts","map","post","slug","title","date","format","id","getStaticProps","fs","require","matter","uniqid","postsDir","process","cwd","files","readdirSync","filter","file","endsWith","rawContent","readFileSync","encoding","data","sort","a","b","Date","props"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AACtC,sBACE;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,SAAQA,IAAI,CAACC,IAAK,EAA/B;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC,2CAAb;AAAA,sBAA0DD,IAAI,CAACE;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsCN,KAAK,CAACI,IAAI,CAACG,IAAN,CAAL,CAAiBC,MAAjB,CAAwB,cAAxB;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SAA0BJ,IAAI,CAACK,EAA/B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,C,CAED;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,QAAMC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAAtB;;AACA,QAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AAEA,QAAMG,QAAQ,GAAI,GAAEC,OAAO,CAACC,GAAR,EAAc,QAAlC;AAEA,QAAMC,KAAK,GAAGP,EAAE,CAACQ,WAAH,CAAeJ,QAAf,EAAyB,OAAzB,CAAd;AACA,QAAMb,KAAK,GAAGgB,KAAK,CAChBE,MADW,CACJC,IAAI,IAAIA,IAAI,CAACC,QAAL,CAAc,KAAd,CADJ,EAEXnB,GAFW,CAEPkB,IAAI,IAAI;AACX,UAAME,UAAU,GAAGZ,EAAE,CAACa,YAAH,CAAiB,GAAET,QAAS,IAAGM,IAAK,EAApC,EAAuC;AAAEI,MAAAA,QAAQ,EAAE;AAAZ,KAAvC,CAAnB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAWb,MAAM,CAACU,UAAD,CAAvB;AAEA,2CAAYG,IAAZ;AAAkBjB,MAAAA,EAAE,EAAEK,MAAM;AAA5B;AACD,GAPW,EAQXa,IARW,CAQN,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASD,CAAC,CAACtB,IAAX,IAAmB,IAAIuB,IAAJ,CAASF,CAAC,CAACrB,IAAX,CARvB,CAAd;AAUA,SAAO;AACLwB,IAAAA,KAAK,EAAE;AAAE7B,MAAAA;AAAF;AADF,GAAP;AAGD","sourcesContent":["import Link from 'next/link'\nimport dayjs from 'dayjs'\n\nexport default function Blog({ posts }) {\n  return (\n    <div className=\"container mx-auto mt-16 w-6/12 divide-y-2\">\n      <h1 className=\"font-bold text-4xl mb-3\">Articles</h1>\n      <ul className=\"pt-5\">\n        {posts.map(post => (\n          <li className=\"mb-3\" key={post.id}>\n            <Link href={`/blog/${post.slug}`}>\n              <a className=\"font-semibold text-2xl hover:text-red-500\">{post.title}</a>\n            </Link>\n            <p className=\"text-sm text-gray-400\">{dayjs(post.date).format('MMMM D, YYYY')}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\n// this function will get called at build time\nexport async function getStaticProps() {\n  const fs = require('fs')\n  const matter = require('gray-matter')\n  const uniqid = require('uniqid')\n\n  const postsDir = `${process.cwd()}/posts`\n\n  const files = fs.readdirSync(postsDir, 'utf-8')\n  const posts = files\n    .filter(file => file.endsWith('.md'))\n    .map(file => {\n      const rawContent = fs.readFileSync(`${postsDir}/${file}`, { encoding: 'utf8' })\n      const { data } = matter(rawContent)\n\n      return { ...data, id: uniqid()}\n    })\n    .sort((a, b) => new Date(b.date) - new Date(a.date))\n\n  return {\n    props: { posts }\n  }\n}"]},"metadata":{},"sourceType":"module"}