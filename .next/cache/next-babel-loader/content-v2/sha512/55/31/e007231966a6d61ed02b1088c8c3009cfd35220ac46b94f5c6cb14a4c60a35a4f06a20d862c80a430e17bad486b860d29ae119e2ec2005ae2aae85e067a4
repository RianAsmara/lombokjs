{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/asmaraputra/Projects/lombokjs/pages/blog/[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport dayjs from 'dayjs';\nexport default function BlogPostPage(props) {\n  const {\n    title,\n    content,\n    date\n  } = props.post;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-16 w-6/12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-bold text-4xl mb-3\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-400\",\n      children: dayjs(date).format('MMMM D, YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mt-5 prose\",\n      dangerouslySetInnerHTML: {\n        __html: content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n} // this function will get called at build time\n\nexport async function getStaticProps(context) {\n  const fs = require('fs');\n\n  const remark = require('remark');\n\n  const html = require('remark-html');\n\n  const matter = require('gray-matter');\n\n  const postsDir = `${process.cwd()}/posts`;\n  const {\n    slug\n  } = context.params;\n  const rawContent = fs.readFileSync(`${postsDir}/${slug}.md`);\n  const {\n    data,\n    content\n  } = matter(rawContent);\n  const result = await remark().use(html).process(content);\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, data), {}, {\n        content: result.toString()\n      })\n    }\n  };\n} // this function will get called at build time\n\nexport async function getStaticPaths(context) {\n  const fs = require('fs');\n\n  const files = fs.readdirSync(`${process.cwd()}/posts`, 'utf-8');\n  const filenames = files.filter(file => file.endsWith('.md')).map(file => file.replace('.md', ''));\n  return {\n    paths: filenames.map(filename => ({\n      params: {\n        slug: filename\n      }\n    })),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/home/asmaraputra/Projects/lombokjs/pages/blog/[slug].js"],"names":["dayjs","BlogPostPage","props","title","content","date","post","format","__html","getStaticProps","context","fs","require","remark","html","matter","postsDir","process","cwd","slug","params","rawContent","readFileSync","data","result","use","toString","getStaticPaths","files","readdirSync","filenames","filter","file","endsWith","map","replace","paths","filename","fallback"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BH,KAAK,CAACI,IAAvC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA,gBAAyCH;AAAzC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA,gBAAsCH,KAAK,CAACK,IAAD,CAAL,CAAYE,MAAZ,CAAmB,cAAnB;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAgC,MAAA,uBAAuB,EAAE;AAACC,QAAAA,MAAM,EAAEJ;AAAT;AAAzD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,C,CAED;;AACA,OAAO,eAAeK,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,QAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,QAAME,IAAI,GAAGF,OAAO,CAAC,aAAD,CAApB;;AACA,QAAMG,MAAM,GAAGH,OAAO,CAAC,aAAD,CAAtB;;AAEA,QAAMI,QAAQ,GAAI,GAAEC,OAAO,CAACC,GAAR,EAAc,QAAlC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAWT,OAAO,CAACU,MAAzB;AACA,QAAMC,UAAU,GAAGV,EAAE,CAACW,YAAH,CAAiB,GAAEN,QAAS,IAAGG,IAAK,KAApC,CAAnB;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQnB,IAAAA;AAAR,MAAoBW,MAAM,CAACM,UAAD,CAAhC;AAEA,QAAMG,MAAM,GAAG,MAAMX,MAAM,GACtBY,GADgB,CACZX,IADY,EAEhBG,OAFgB,CAERb,OAFQ,CAArB;AAIA,SAAO;AACHF,IAAAA,KAAK,EAAE;AACHI,MAAAA,IAAI,kCACGiB,IADH;AAEAnB,QAAAA,OAAO,EAAEoB,MAAM,CAACE,QAAP;AAFT;AADD;AADJ,GAAP;AAQH,C,CAED;;AACA,OAAO,eAAeC,cAAf,CAA8BjB,OAA9B,EAAuC;AAC1C,QAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,QAAMgB,KAAK,GAAGjB,EAAE,CAACkB,WAAH,CAAgB,GAAEZ,OAAO,CAACC,GAAR,EAAc,QAAhC,EAAyC,OAAzC,CAAd;AAEA,QAAMY,SAAS,GAAGF,KAAK,CAClBG,MADa,CACNC,IAAI,IAAIA,IAAI,CAACC,QAAL,CAAc,KAAd,CADF,EAEbC,GAFa,CAETF,IAAI,IAAIA,IAAI,CAACG,OAAL,CAAa,KAAb,EAAoB,EAApB,CAFC,CAAlB;AAIA,SAAO;AACHC,IAAAA,KAAK,EAAEN,SAAS,CAACI,GAAV,CAAcG,QAAQ,KACzB;AACIjB,MAAAA,MAAM,EAAE;AACJD,QAAAA,IAAI,EAAEkB;AADF;AADZ,KADyB,CAAtB,CADJ;AAQHC,IAAAA,QAAQ,EAAE;AARP,GAAP;AAUH","sourcesContent":["import dayjs from 'dayjs'\n\nexport default function BlogPostPage(props) {\n    const { title, content, date } = props.post\n\n    return (\n        <div className=\"container mx-auto mt-16 w-6/12\">\n            <h1 className=\"font-bold text-4xl mb-3\">{title}</h1>\n            <p className=\"text-sm text-gray-400\">{dayjs(date).format('MMMM D, YYYY')}</p>\n            <section className=\"mt-5 prose\" dangerouslySetInnerHTML={{__html: content}} />\n        </div>\n    )\n}\n\n// this function will get called at build time\nexport async function getStaticProps(context) {\n    const fs = require('fs')\n    const remark = require('remark')\n    const html = require('remark-html')\n    const matter = require('gray-matter')\n\n    const postsDir = `${process.cwd()}/posts`\n\n    const { slug } = context.params\n    const rawContent = fs.readFileSync(`${postsDir}/${slug}.md`)\n    const { data, content } = matter(rawContent)\n\n    const result = await remark()\n        .use(html)\n        .process(content)\n\n    return {\n        props: { \n            post: { \n                ...data, \n                content: result.toString(),\n            },\n        }\n    }\n}\n\n// this function will get called at build time\nexport async function getStaticPaths(context) {\n    const fs = require('fs')\n    const files = fs.readdirSync(`${process.cwd()}/posts`, 'utf-8')\n\n    const filenames = files\n        .filter(file => file.endsWith('.md'))\n        .map(file => file.replace('.md', ''))\n\n    return {\n        paths: filenames.map(filename => (\n            { \n                params: {\n                    slug: filename,\n                },\n            }\n        )),\n        fallback: false,\n    }\n}"]},"metadata":{},"sourceType":"module"}